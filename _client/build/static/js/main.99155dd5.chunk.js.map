{"version":3,"sources":["components/homepage/index.js","App.js","reportWebVitals.js","index.js"],"names":["Homepage","App","useState","isUserSignedIn","setIsUserSignedIn","useEffect","localStorage","getItem","onLoginSuccessful","onLogout","removeItem","toString","onClick","nonce","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PA4HeA,I,QCnEAC,MAvCf,WAAgB,IAAD,EAC+BC,oBAAS,GADxC,mBACNC,EADM,KACUC,EADV,KAEbC,qBAAU,WACJC,aAAaC,QAAQ,SAAUH,GAAkB,GAChDA,GAAkB,KACtB,IAEH,IAAMI,EAAoB,WACxBJ,GAAkB,IAGdK,EAAW,WACfH,aAAaI,WAAW,QACxBJ,aAAaI,WAAW,SACxBN,GAAkB,IASpB,OACE,gCACE,2CACA,iDAAoBD,EAAeQ,cACnC,wBAAQC,QAASJ,EAAjB,mBACA,wBAAQI,QAASH,EAAjB,oBAEA,cAAC,IAAD,CAAQG,QAASJ,EAAmBK,MAAM,2BAA1C,mBACA,cAAC,IAAD,CAAQD,QAASH,EAAUI,MAAM,2BAAjC,wBCrCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.99155dd5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Row,\n  Form,\n  Button,\n  Alert,\n  InputGroup,\n  Spinner,\n  CardColumns,\n  Card,\n} from \"react-bootstrap\";\nimport { searchArtworks } from \"../../api\";\n\nfunction Homepage({ onLogout }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [noArtworksFound, setNoArtworksFound] = useState(false);\n  const [keyword, setKeyword] = useState(\"\");\n  const [artworks, setArtworks] = useState([]);\n\n  const onChangeKeyword = (event) => {\n    setKeyword(event.target.value);\n  };\n\n  const onSearchArtworks = async (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    const artworks = await searchArtworks({ keyword });\n    setArtworks(artworks);\n    setNoArtworksFound(!artworks || !artworks.length);\n    setIsLoading(false);\n  };\n\n  return (\n    <Container fluid>\n      <Row className=\"mt-2 mb-2 justify-content-end\" noGutters>\n        <Button variant=\"outline-danger\" onClick={onLogout}>\n          Log out\n        </Button>\n      </Row>\n      <Row noGutters>\n        <h1>Welcome!</h1>\n      </Row>\n      <Row className=\"mt-2\" noGutters>\n        <h6>\n          Enter one or multiple keywords below to search for artworks in the Art\n          Institute of Chicago.\n        </h6>\n      </Row>\n      <Row noGutters>\n        <Form className=\"w-100 mb-5\" onSubmit={onSearchArtworks}>\n          <InputGroup>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"e.g. Monet, O'Keeffe, Ancient Greek...\"\n              onChange={onChangeKeyword}\n              value={keyword}\n            />\n            <InputGroup.Prepend>\n              <Button\n                variant=\"outline-primary\"\n                disabled={!keyword}\n                type=\"submit\"\n              >\n                Search artworks\n              </Button>\n            </InputGroup.Prepend>\n          </InputGroup>\n        </Form>\n      </Row>\n      {isLoading && (\n        <Row className=\"justify-content-center mb-5\">\n          <Spinner animation=\"border\" variant=\"primary\" />\n        </Row>\n      )}\n      {noArtworksFound && !isLoading ? (\n        <Alert variant={\"info\"}>\n          No results were found for the entered keyword/s.\n        </Alert>\n      ) : (\n        <CardColumns>\n          {artworks.map((artwork, idx) => {\n            const {\n              id,\n              title,\n              image_url,\n              artist_display,\n              date_display,\n              medium_display,\n              place_of_origin,\n            } = artwork;\n            return (\n              <Card key={`artwork-${id}`}>\n                <a\n                  href={image_url}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  aria-current=\"true\"\n                >\n                  <Card.Img variant=\"top\" src={image_url} />\n                </a>\n                <Card.Body>\n                  <Card.Title>{title}</Card.Title>\n                  <Card.Text\n                    className=\"text-muted\"\n                    style={{ whiteSpace: \"pre-line\" }}\n                  >\n                    {place_of_origin}, {date_display}\n                    <br />\n                    <small className=\"text-muted\">{artist_display}</small>\n                  </Card.Text>\n                  <Card.Text>\n                    <small className=\"text-muted\">{medium_display}</small>\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      )}\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import React, { useEffect, useState } from \"react\";\nimport Login from \"./components/login\";\nimport Homepage from \"./components/homepage\";\nimport Button from \"@material-ui/core/Button\";\n// import {Button as NaviButton} from \"navi-design-system\"\nimport styled from \"styled-components\";\n\n// const NaviButton = styled(Button)`\n//   background-color: red;\n//   color: white;\n//   border-radius: 10px;\n//   padding: 10px 20px;\n//   margin: 10px;\n//   font-size: 20px;\n//   font-weight: bold;\n// `;\n\n\nfunction App() {\n  const [isUserSignedIn, setIsUserSignedIn] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) setIsUserSignedIn(true);\n    else setIsUserSignedIn(false);\n  }, []);\n\n  const onLoginSuccessful = () => {\n    setIsUserSignedIn(true);\n  };\n\n  const onLogout = () => {\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"token\");\n    setIsUserSignedIn(false);\n  };\n\n  // return (\n  //   (isUserSignedIn && <Homepage onLogout={onLogout} />) || (\n  //     <Login onLoginSuccessful={onLoginSuccessful} />\n  //   )\n  // );\n\n  return (\n    <div>\n      <h1>React App</h1>\n      <p>isUserSignedIn: {isUserSignedIn.toString()}</p>\n      <button onClick={onLoginSuccessful}>Login</button>\n      <button onClick={onLogout}>Logout</button>\n\n      <Button onClick={onLoginSuccessful} nonce=\"C7Jo9Ot7OGp36jCfSpoTKw==\">Login</Button>\n      <Button onClick={onLogout} nonce=\"C7Jo9Ot7OGp36jCfSpoTKw==\">Logout</Button>\n      \n      {/* <NaviButton onClick={onLogout} nonce=\"C7Jo9Ot7OGp36jCfSpoTKw==\">Navi Button</NaviButton> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}